diff --git a/node_modules/hardhat-change-network/dist/src/index.js b/node_modules/hardhat-change-network/dist/src/index.js
index 495956e..f9d99c2 100644
--- a/node_modules/hardhat-change-network/dist/src/index.js
+++ b/node_modules/hardhat-change-network/dist/src/index.js
@@ -10,13 +10,13 @@ config_1.extendEnvironment((hre) => {
     // We use lazyObject to avoid initializing things until they are actually
     // needed.
     const providers = {};
-    hre.getProvider = function getProvider(name) {
+    hre.getProvider = async function getProvider(name) {
         if (!providers[name]) {
-            providers[name] = construction_1.createProvider(name, this.config.networks[name], this.config.paths, this.artifacts);
+            providers[name] = await construction_1.createProvider(this.config, name, this.artifacts);
         }
         return providers[name];
     };
-    hre.changeNetwork = function changeNetwork(newNetwork) {
+    hre.changeNetwork = async function changeNetwork(newNetwork) {
         if (!this.config.networks[newNetwork]) {
             throw new Error(`changeNetwork: Couldn't find network '${newNetwork}'`);
         }
@@ -25,11 +25,10 @@ config_1.extendEnvironment((hre) => {
         }
         this.network.name = newNetwork;
         this.network.config = this.config.networks[newNetwork];
-        this.network.provider = this.getProvider(newNetwork);
+        this.network.provider = await this.getProvider(newNetwork);
         if (this.ethers) {
-            const { EthersProviderWrapper } = require("@nomiclabs/hardhat-ethers/internal/ethers-provider-wrapper");
-            this.ethers.provider = new EthersProviderWrapper(this.network.provider);
+            const { HardhatEthersProvider } = require("@nomicfoundation/hardhat-ethers/internal/hardhat-ethers-provider");
+            this.ethers.provider = new HardhatEthersProvider(this.network.provider);
         }
     };
 });
-//# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/hardhat-change-network/src/index.ts b/node_modules/hardhat-change-network/src/index.ts
index a854c9e..22dd65a 100644
--- a/node_modules/hardhat-change-network/src/index.ts
+++ b/node_modules/hardhat-change-network/src/index.ts
@@ -13,9 +13,9 @@ extendEnvironment((hre) => {
   // needed.
   const providers: { [name: string]: EthereumProvider } = {};
 
-  hre.getProvider = function getProvider(name: string): EthereumProvider {
+  hre.getProvider = async function getProvider(name: string): EthereumProvider {
     if (!providers[name]) {
-      providers[name] = createProvider(
+      providers[name] = await createProvider(
         name,
         this.config.networks[name],
         this.config.paths,
@@ -25,7 +25,7 @@ extendEnvironment((hre) => {
     return providers[name];
   }
 
-  hre.changeNetwork = function changeNetwork(newNetwork: string) {
+  hre.changeNetwork = async function changeNetwork(newNetwork: string) {
     if (!this.config.networks[newNetwork]) {
       throw new Error(`changeNetwork: Couldn't find network '${newNetwork}'`);
     }
@@ -36,11 +36,11 @@ extendEnvironment((hre) => {
 
     this.network.name = newNetwork;
     this.network.config = this.config.networks[newNetwork];
-    this.network.provider = this.getProvider(newNetwork);
+    this.network.provider = await this.getProvider(newNetwork);
 
     if ((this as any).ethers) {
-      const { EthersProviderWrapper } = require("@nomiclabs/hardhat-ethers/internal/ethers-provider-wrapper");
-      (this as any).ethers.provider = new EthersProviderWrapper(this.network.provider);
+      const { HardhatEthersProvider } = require("@nomicfoundation/hardhat-ethers/internal/hardhat-ethers-provider")
+      (this as any).ethers.provider = new HardhatEthersProvider(this.network.provider, this.network.name);
     }
   };
 });
diff --git a/node_modules/hardhat-change-network/src/type-extensions.ts b/node_modules/hardhat-change-network/src/type-extensions.ts
index 19c2cb7..83671eb 100644
--- a/node_modules/hardhat-change-network/src/type-extensions.ts
+++ b/node_modules/hardhat-change-network/src/type-extensions.ts
@@ -9,7 +9,7 @@ declare module "hardhat/types/runtime" {
   // This is an example of an extension to the Hardhat Runtime Environment.
   // This new field will be available in tasks' actions, scripts, and tests.
   export interface HardhatRuntimeEnvironment {
-    changeNetwork(newNetwork: string): void;
-    getProvider(newNetwork: string): EthereumProvider;
+    changeNetwork(newNetwork: string): Promise<void>;
+    getProvider(newNetwork: string): Promise<EthereumProvider>;
   }
 }
